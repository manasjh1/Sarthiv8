name: Deploy to AWS EC2

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.EC2_KEY }}

    - name: Add host to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -euo pipefail
          
          # Navigate to project directory
          cd /opt/sarthi/current || {
            echo "Project directory not found. Run initial setup first."
            exit 1
          }
          
          # Stop the service
          pm2 stop sarthi-backend || true
          
          # Pull latest changes
          git fetch origin
          git reset --hard origin/dev
          
          # Update dependencies only if requirements.txt changed
          if git diff HEAD@{1} --name-only | grep -q requirements.txt; then
            echo "Requirements changed, updating dependencies..."
            source venv/bin/activate
            pip install -r requirements.txt
          else
            echo "No dependency changes detected"
          fi
          
          # Update environment variables (only if they changed)
          cat > .env << 'ENVEOF'
        SUPABASE_CONNECTION_STRING=${{ secrets.SUPABASE_CONNECTION_STRING }}
        JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
        JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}
        JWT_EXPIRATION_HOURS=${{ secrets.JWT_EXPIRATION_HOURS }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        OPENAI_EMBED_MODEL=${{ secrets.OPENAI_EMBED_MODEL }}
        LLM_MODEL=${{ secrets.LLM_MODEL }}
        PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
        PINECONE_INDEX=${{ secrets.PINECONE_INDEX }}
        PINECONE_NAMESPACE=${{ secrets.PINECONE_NAMESPACE }}
        PROMPT_CONNECTION_TIMEOUT=${{ secrets.PROMPT_CONNECTION_TIMEOUT }}
        PROMPT_MAX_POOL_CONNECTIONS=${{ secrets.PROMPT_MAX_POOL_CONNECTIONS }}
        PROMPT_MIN_POOL_CONNECTIONS=${{ secrets.PROMPT_MIN_POOL_CONNECTIONS }}
        GIC_INTENT_STAGE_ID=${{ secrets.GIC_INTENT_STAGE_ID }}
        ZEPTOMAIL_TOKEN=${{ secrets.ZEPTOMAIL_TOKEN }}
        ZEPTOMAIL_FROM_DOMAIN=${{ secrets.ZEPTOMAIL_FROM_DOMAIN }}
        ZEPTOMAIL_FROM_NAME=${{ secrets.ZEPTOMAIL_FROM_NAME }}
        WHATSAPP_ACCESS_TOKEN=${{ secrets.WHATSAPP_ACCESS_TOKEN }}
        WHATSAPP_PHONE_NUMBER_ID=${{ secrets.WHATSAPP_PHONE_NUMBER_ID }}
        WHATSAPP_TEMPLATE_NAME=${{ secrets.WHATSAPP_TEMPLATE_NAME }}
        ENVEOF
          chmod 600 .env
          
          # Restart the service
          source venv/bin/activate
          pm2 start "uvicorn app.main:app --host 0.0.0.0 --port 8000" --name "sarthi-backend" || pm2 restart sarthi-backend
          
          # Wait and verify
          sleep 5
          if pm2 list | grep -q "sarthi-backend.*online" && curl -f http://localhost:8000/health; then
            echo "Deployment successful!"
          else
            echo "Deployment failed!"
            pm2 logs sarthi-backend --lines 10
            exit 1
          fi
        EOF